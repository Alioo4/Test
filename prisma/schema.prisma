// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  fullname String  @db.VarChar(32)
  username String  @db.VarChar(32) @unique
  password String  @db.VarChar(255)
  age Int? @map("age") 
  createdAt DateTime @default(now()) @map("created_at")

  post Post[]

  @@id([id])
  @@map("users")
}

model Admins {
  id         String   @default(dbgenerated("gen_random_uuid()")) @map("id")
  fullname   String   @db.VarChar(32)
  username   String   @db.VarChar(32) @unique
  password   String   @db.VarChar(255)
  createdAt  DateTime @default(now()) @map("created_at")

  @@id([id])
  @@map("admins")
}

model Post {
  id        String   @default(dbgenerated("gen_random_uuid()")) @map("id")
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  views     Int      @default(0)
  userId    String   @map("user_id") @db.Uuid
    

  user Users @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("posts")
}
